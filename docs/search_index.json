[["index.html", "Useful R Syntax Chapter 1 Introduction 1.1 Structure of collection", " Useful R Syntax Chris McNeil 2021-05-10 Chapter 1 Introduction This document is a collection of useful code for Rmarkdown and R I have used the mtcars dataset if possible I have used the Tidyverse and the pipe ( %&gt;% ) if possible I recommend that the code is checked for warnings that is is not depreciated Dont Panic 1.1 Structure of collection Rmarkdown formatting basics Rstudio load/unload packages print figures to files Libraries/packages essential/useful packaged Data wrangling load dataset clean environment check for duplicates Merging datasheets Merging datasets Reshaping recode factors dealing with missing data Data reduction with PCA Data standardisation Statistical analysis Data Visualisation Tables Plots "],["rmarkdown.html", "Chapter 2 RMarkdown 2.1 Formatting basics", " Chapter 2 RMarkdown This chapter contains syntax for the non-code rmarkdown sections. 2.1 Formatting basics *** on it own, for a horizontal line **text** for bold *text* for italics 1. Item 1 2. Item 2 3. Item 3 + Item 3a + Item 3b for ordered lists [linked phrase](http://example.com) for links ![alt text](figures/img.png) for images ### R chunk basics message=FALSE, warning=FALSE, include=FALSE, ECHO=FALSE (show output), To set document default knitr::opts_chunk$set(echo=FALSE) "],["rstudio.html", "Chapter 3 Rstudio 3.1 Useful packages 3.2 Remove a package 3.3 Import using Janitor 3.4 Remove dataframe 3.5 Save dataframe (CSV or Rdata) 3.6 Save a diagram or plot 3.7 Recode a text variable 3.8 Alter variable names:", " Chapter 3 Rstudio This chapter contains syntax for manipulating data and packages within the R studio environment. 3.1 Useful packages Load all libraries library(tidyverse) # data handling and viz library(janitor) #dataframe import cleaning ## Warning: package &#39;janitor&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;janitor&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## chisq.test, fisher.test library(knitr) #nice html tables ## Warning: package &#39;knitr&#39; was built under R version 4.0.5 library(kableExtra) # nicer knitr tables ## Warning: package &#39;kableExtra&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;kableExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## group_rows library(broom) ## Warning: package &#39;broom&#39; was built under R version 4.0.5 library(readr) # load csv stored data library(geosphere) # for calc daylength ## Warning: package &#39;geosphere&#39; was built under R version 4.0.5 3.2 Remove a package #Unload a module: library(clipr) #load ## Welcome to clipr. See ?write_clip for advisories on writing to the clipboard in R. detach(package:clipr) #unload 3.3 Import using Janitor # Create a data.frame with dirty names test_df &lt;- as.data.frame(matrix(ncol = 6)) names(test_df) &lt;- c(&quot;firstName&quot;, &quot;ábc@!*&quot;, &quot;% successful (2009)&quot;, &quot;REPEAT VALUE&quot;, &quot;REPEAT VALUE&quot;, &quot;&quot;) head(test_df) test_df &lt;- test_df %&gt;% clean_names() head(test_df) ## firstName ábc@!* % successful (2009) REPEAT VALUE REPEAT VALUE ## 1 NA NA NA NA NA NA ## first_name abc percent_successful_2009 repeat_value repeat_value_2 x ## 1 NA NA NA NA NA NA Reference here 3.4 Remove dataframe data(&quot;mtcars&quot;) data(&quot;band_instruments&quot;) data(&quot;band_instruments2&quot;) # Load example datasets rm(list=ls()[! ls() %in% c(&quot;band_instruments&quot;,&quot;band_instruments2&quot;)]) # Everything except Band instruments rm(list=setdiff(ls(), &quot;band_instruments&quot;)) # Everything except &quot;bandinstruments&quot; rm(list=ls()) # Remove everything Reference: Stackoverflow 3.5 Save dataframe (CSV or Rdata) make date string datenow &lt;- format(Sys.time(), &quot;_%Y_%m_%d&quot;) date data(mtcars) ## function () ## .Internal(date()) ## &lt;bytecode: 0x0000000021b63158&gt; ## &lt;environment: namespace:base&gt; Write file names #create data directory dir.create(&quot;data_out&quot;) ## Warning in dir.create(&quot;data_out&quot;): &#39;data_out&#39; already exists filenamecsv &lt;- paste(&quot;data_out/mtcsvdata&quot;,datenow,&quot;.csv&quot;,sep=&quot;&quot;) filenamerda &lt;- paste(&quot;data_out/mtrdadata&quot;,datenow,&quot;.rda&quot;,sep=&quot;&quot;) Save the files save(mtcars,file=filenamerda) write.csv(mtcars,file=filenamecsv) 3.6 Save a diagram or plot plot1 &lt;- mtcars %&gt;% ggplot(aes(hp,qsec))+geom_point() #plot1 #print plot if required pdf(&quot;plot.pdf&quot;) plot1 dev.off() ## png ## 2 pdf device off. 3.7 Recode a text variable data(&quot;band_members&quot;) kable(head(band_members)) %&gt;% kable_minimal(full_width = F) band_members &lt;- band_members %&gt;% mutate(name=recode(name, &quot;Mick&quot;= &quot;m&quot;)) kable(head((band_members))) %&gt;% kable_minimal(full_width = F) rm(list=ls()) # Remove everything name band Mick Stones John Beatles Paul Beatles name band m Stones John Beatles Paul Beatles Reference: Kable Extra 3.8 Alter variable names: Remove underscores data(&quot;mtcars&quot;) mtcars &lt;- mtcars %&gt;% rename(hp_new=hp) kable(head((mtcars))) %&gt;% kable_minimal(full_width = F) mtcars &lt;- mtcars %&gt;% rename_with(.fn = ~str_replace(., &quot;_&quot;, &quot;&quot;)) kable(head((mtcars))) %&gt;% kable_minimal(full_width = F) mpg cyl disp hp_new drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 mpg cyl disp hpnew drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 plot(cars) Figure 3.1: CAPTION THIS FIGURE!! "],["data-wrangling-and-manipulation.html", "Chapter 4 Data Wrangling and manipulation 4.1 Bin variable ( e.g. Low/Medium/High) 4.2 Conditional function 4.3 Sum across rows 4.4 Standardise variable 4.5 Conditional Replacement 4.6 Filter nas or retain complete cases 4.7 Delete specified columns 4.8 Find duplicate rows 4.9 Impute missing values 4.10 Keep rows based on a unique value. 4.11 Delete rows on a variable value 4.12 Use if else to calculate on values 4.13 Merge data frames (variables) 4.14 Merge data frames (individuals) 4.15 Create a new factor from existing 4.16 change data types 4.17 calculate dates and photoperiod 4.18 Reduce variables using PCA", " Chapter 4 Data Wrangling and manipulation library(Hmisc) #impute values ## Warning: package &#39;Hmisc&#39; was built under R version 4.0.5 ## Loading required package: lattice ## Loading required package: survival ## Loading required package: Formula ## ## Attaching package: &#39;Hmisc&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## src, summarize ## The following objects are masked from &#39;package:base&#39;: ## ## format.pval, units library(naniar) # deal with NAs ## Warning: package &#39;naniar&#39; was built under R version 4.0.5 library(geosphere) ## Warning: package &#39;geosphere&#39; was built under R version 4.0.5 library(tidyverse) # data handling and viz library(janitor) #dataframe import cleaning ## Warning: package &#39;janitor&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;janitor&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## chisq.test, fisher.test library(knitr) #nice html tables ## Warning: package &#39;knitr&#39; was built under R version 4.0.5 library(kableExtra) # nicer knitr tables ## Warning: package &#39;kableExtra&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;kableExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## group_rows library(broom) ## Warning: package &#39;broom&#39; was built under R version 4.0.5 library(readr) # load csv stored data library(geosphere) # for calc daylength 4.1 Bin variable ( e.g. Low/Medium/High) data(mtcars) mtcars &lt;- mtcars %&gt;% mutate(hp_cat=cut(hp, breaks=c(-Inf, 100, Inf), labels=c(&quot;low hp&quot;,&quot;high hp&quot;))) 4.2 Conditional function mtcars &lt;- mtcars %&gt;% mutate(loghp=ifelse(cyl&gt;4,log10(hp),NA)) # Nonsensical example, but log transformed all horse powers of cars with more # than four cylinders 4.3 Sum across rows mtcars &lt;- mtcars %&gt;% mutate(sum = select(., disp:drat) %&gt;% apply(1, sum, na.rm=TRUE)) #apply() takes Data frame or matrix as an input and gives output in vector #(i.e.many columns to one list) # the &#39;1&#39; sets the dataframe to use (already selected here) Reference 4.4 Standardise variable dat2 &lt;- mtcars %&gt;% as_tibble() %&gt;% mutate(across(where(is.numeric), scale)) funcs &lt;- list(mean = ~mean(.x,na.rm = TRUE), sd = ~sd(.x,na.rm = TRUE) ) dat2 %&gt;% summarise(across(where(is.numeric),funcs)) ## # A tibble: 1 x 26 ## mpg_mean mpg_sd cyl_mean cyl_sd disp_mean disp_sd hp_mean hp_sd drat_mean ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 7.11e-17 1 -1.47e-17 1 -9.08e-17 1 1.04e-17 1 -2.92e-16 ## # ... with 17 more variables: drat_sd &lt;dbl&gt;, wt_mean &lt;dbl&gt;, wt_sd &lt;dbl&gt;, ## # qsec_mean &lt;dbl&gt;, qsec_sd &lt;dbl&gt;, vs_mean &lt;dbl&gt;, vs_sd &lt;dbl&gt;, am_mean &lt;dbl&gt;, ## # am_sd &lt;dbl&gt;, gear_mean &lt;dbl&gt;, gear_sd &lt;dbl&gt;, carb_mean &lt;dbl&gt;, ## # carb_sd &lt;dbl&gt;, loghp_mean &lt;dbl&gt;, loghp_sd &lt;dbl&gt;, sum_mean &lt;dbl&gt;, ## # sum_sd &lt;dbl&gt; 4.5 Conditional Replacement Replace all NAs in a specified variable with 0. mtcars &lt;- mtcars %&gt;% mutate(loghp1 = coalesce(loghp, 0)) #or mtcars &lt;- mtcars %&gt;% mutate(loghp = replace_na(loghp, &quot;missing&quot;)) 4.6 Filter nas or retain complete cases mtcars &lt;- mtcars %&gt;% filter(!is.na(hp)) # no missing values found mtcars &lt;- mtcars %&gt;%filter(complete.cases(.)) # no missing values found 4.7 Delete specified columns mtcars1 &lt;- mtcars %&gt;% select(-(drat)) # single column mtcars2 &lt;- mtcars %&gt;% select(-c(drat,hp,vs:gear)) # multiple columns rm(list=setdiff(ls(), &quot;mtcars&quot;)) # clean environment ##Change specific datapoint mtcarsmissingvalues &lt;- mtcars %&gt;% mutate(gear=ifelse(gear==5,&quot;missing&quot;,gear)) 4.8 Find duplicate rows # specify which variable to check for duplication n_occur1 &lt;- data.frame(table(mtcars$mpg)) kable(n_occur1[n_occur1$Freq &gt; 1,]) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() Var1 Freq 1 10.4 2 6 15.2 2 14 19.2 2 16 21 2 17 21.4 2 19 22.8 2 23 30.4 2 4.9 Impute missing values 4.9.1 To be completedImputing missing values using the mean: #create missing values #mtcarsmissingvalues &lt;- mtcars %&gt;% mutate(gear=ifelse(gear==5,&quot;&quot;,gear)) mtcarsmissingvalues &lt;- mtcars %&gt;% replace_with_na(replace = list(gear = 5)) mtcarsmissingvalues$gear &lt;- impute(mtcarsmissingvalues$gear, mean) # replace with mean mtcarsmissingvalues$gear &lt;- impute(mtcarsmissingvalues$gear, median) # median mtcarsmissingvalues$gear &lt;- impute(mtcarsmissingvalues$gear, 4) # replace specific number Reference: 4.10 Keep rows based on a unique value. e.g. prescription code mtcarsdistinct &lt;- mtcars %&gt;% distinct(cyl, .keep_all= TRUE) Reference 4.11 Delete rows on a variable value mtcars1&lt;-mtcars %&gt;% filter(!(cyl==6)) mtcars2&lt;-mtcars %&gt;% filter(!(cyl==6 | hp==180)) # | is the &#39;or&#39; operator mtcars3&lt;-mtcars %&gt;% filter(!(cyl==8 &amp; hp==215)) # &amp; is the &#39;and&#39; operator # remove the ! To select the individuals with the specified conditions 4.12 Use if else to calculate on values # no NA&#39;s so all values unchanged. mtcars &lt;- mtcars %&gt;% mutate(vs=ifelse(is.na(vs),(carb-am)/365.25,vs)) 4.13 Merge data frames (variables) *left_join(x, y): returns all rows from x, and all columns from x and y. Rows in x with no match in y will have NA values in the new columns. If there are multiple matches between x and y, all combinations of the matches are returned. *inner_join(x, y): returns all rows from x where there are matching values in y, and all columns from x and y. If there are multiple matches between x and y, all combinations of the matches are returned. *full_join(x, y): returns all rows and all columns from both x and y. Where there are not matching values, the function returns NA for the one missing inner: only rows with matching keys in both x and y left: all rows in x, adding matching columns from y right: all rows in y, adding matching columns from x full: all rows in x with matching columns in y, then the rows of y that dont match x. # prepare new dataset # make the rownames into a &#39;joinable&#39; column mtcars &lt;- mtcars %&gt;% mutate(carnames=rownames(mtcars)) mtcars_extradata &lt;- mtcars %&gt;% select(cyl) # make the rownames into a &#39;joinable&#39; column mtcars_extradata &lt;- mtcars_extradata %&gt;% mutate(carnames=rownames(mtcars_extradata)) mtcars_extradata &lt;- mtcars_extradata %&gt;% mutate(valves=cyl*4) mtcars_extradata &lt;- mtcars_extradata %&gt;% select(-cyl) kable(glimpse(mtcars_extradata%&gt;% slice(1:6))) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() mtcars &lt;- left_join(mtcars,mtcars_extradata,by = &#39;carnames&#39;) kable(glimpse(mtcars %&gt;%select(carb:valves) %&gt;% slice(1:6))) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() ## Rows: 6 ## Columns: 2 ## $ carnames &lt;chr&gt; &quot;Mazda RX4&quot;, &quot;Mazda RX4 Wag&quot;, &quot;Datsun 710&quot;, &quot;Hornet 4 Drive&quot;,~ ## $ valves &lt;dbl&gt; 24, 24, 16, 24, 32, 24 carnames valves Mazda RX4 Mazda RX4 24 Mazda RX4 Wag Mazda RX4 Wag 24 Datsun 710 Datsun 710 16 Hornet 4 Drive Hornet 4 Drive 24 Hornet Sportabout Hornet Sportabout 32 Valiant Valiant 24 ## Rows: 6 ## Columns: 7 ## $ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1 ## $ hp_cat &lt;fct&gt; high hp, high hp, low hp, high hp, high hp, high hp ## $ loghp &lt;chr&gt; &quot;2.04139268515822&quot;, &quot;2.04139268515822&quot;, &quot;missing&quot;, &quot;2.0413926~ ## $ sum &lt;dbl&gt; 273.90, 273.90, 204.85, 371.08, 538.15, 332.76 ## $ loghp1 &lt;dbl&gt; 2.041393, 2.041393, 0.000000, 2.041393, 2.243038, 2.021189 ## $ carnames &lt;chr&gt; &quot;Mazda RX4&quot;, &quot;Mazda RX4 Wag&quot;, &quot;Datsun 710&quot;, &quot;Hornet 4 Drive&quot;,~ ## $ valves &lt;dbl&gt; 24, 24, 16, 24, 32, 24 carb hp_cat loghp sum loghp1 carnames valves 4 high hp 2.04139268515822 273.90 2.041393 Mazda RX4 24 4 high hp 2.04139268515822 273.90 2.041393 Mazda RX4 Wag 24 1 low hp missing 204.85 0.000000 Datsun 710 16 1 high hp 2.04139268515822 371.08 2.041393 Hornet 4 Drive 24 2 high hp 2.24303804868629 538.15 2.243038 Hornet Sportabout 32 1 high hp 2.02118929906994 332.76 2.021189 Valiant 24 4.14 Merge data frames (individuals) mtcarsmerged &lt;- bind_rows(mtcars2, mtcars3) rm(list=setdiff(ls(), &quot;mtcars&quot;)) # clean environment Reference 4.15 Create a new factor from existing mtcars &lt;- mtcars %&gt;% mutate(cyc_carb = paste(cyl,carb,sep=&quot;-&quot;)) 4.16 change data types (merging fails if data types are different) # adni_demog&lt;-adni_demog %&gt;% mutate(age_scan=as.numeric(age_scan)) # ukbb&lt;-ukbb %&gt;% mutate(scan_no=as.numeric(scan_no)) 4.17 calculate dates and photoperiod (using geosphere library) #import sample dataset dateslat &lt;- read_csv(&quot;dateslat.csv&quot;) ## ## -- Column specification -------------------------------------------------------- ## cols( ## `ID&#39;s` = col_double(), ## `date (dmy)` = col_character(), ## latitude = col_double() ## ) dateslat &lt;- dateslat %&gt;% clean_names() dateslat &lt;- dateslat %&gt;% mutate(dateofscan=(as.Date(date_dmy,format=&quot;%d/%m/%Y&quot;))) dateslat &lt;- dateslat %&gt;% mutate(daylength=daylength(latitude,dateofscan)) dateslat %&gt;% ggplot(aes(x=dateofscan,y=daylength)) +geom_line() +theme_minimal() Figure 4.1: CAPTION THIS FIGURE!! 4.18 Reduce variables using PCA 4.18.1 To be completed "],["statistical-analysis.html", "Chapter 5 Statistical Analysis 5.1 Regression 5.2 Logistic Regression 5.3 Survival Analysis and Visualisation 5.4 Receiver Operated Curves (ROC)", " Chapter 5 Statistical Analysis 5.1 Regression 5.1.1 Linear regression on groups kable(mtcars %&gt;% group_by(as.factor(gear)) %&gt;% summarise(mean = mean(qsec), sd = sd(qsec))) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() #Run the same linear regression model by group levels? #Instead of running #summary(lm(y~x)) for the number of levels #you have, you can use the R package broom along with dplyr. # Run the same regression model for gears ## kable(mtcars%&gt;% group_by(gear) %&gt;% do(fitgear = glance(lm(hp~qsec, data = .))) %&gt;% unnest(fitgear),digits=2) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() as.factor(gear) mean sd 3 17.692 1.349916 4 18.965 1.613880 5 15.640 1.130487 gear r.squared adj.r.squared sigma statistic p.value df logLik AIC BIC deviance df.residual nobs 3 0.66 0.63 28.87 25.19 0.00 1 -70.65 147.31 149.43 10837.12 13 15 4 0.10 0.01 25.72 1.15 0.31 1 -54.90 115.80 117.26 6616.46 10 12 5 0.88 0.83 41.95 21.03 0.02 1 -24.50 55.00 53.83 5279.95 3 5 Reference 5.2 Logistic Regression 5.2.1 to be completed 5.3 Survival Analysis and Visualisation 5.3.1 To be completed 5.4 Receiver Operated Curves (ROC) 5.4.1 To be completed "],["data-visualisation.html", "Chapter 6 Data Visualisation 6.1 Specific package for summary tables: 6.2 Visual summary of data 6.3 Correlation matrix 6.4 Graphing", " Chapter 6 Data Visualisation Tables and graphs, survival plots, missing values. ## Summary Tables 6.0.1 Packages needed 6.0.2 Summarise by group data(mtcars) kable(mtcars %&gt;% group_by(cyl) %&gt;% summarise(Ave=mean(hp), StDev=sd(hp))) %&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() cyl Ave StDev 4 82.63636 20.93453 6 122.28571 24.26049 8 209.21429 50.97689 6.0.3 Summary Table - Multiple functions, variables # make sure brackets are correct df.sum &lt;- mtcars %&gt;% select(mpg,cyl,hp) %&gt;% summarise(across(everything(),list(mean=mean,sd=sd))) kable(df.sum,digits=2) %&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() # perform the analysis df.longer &lt;- df.sum%&gt;% pivot_longer(col=everything(), names_to = c(&quot;Attribute&quot;,&quot;.value&quot;), names_sep = &quot;_&quot;) kable(df.longer,digits=2) %&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() # pivot longer the analysis to make it readable mpg_mean mpg_sd cyl_mean cyl_sd hp_mean hp_sd 20.09 6.03 6.19 1.79 146.69 68.56 Attribute mean sd mpg 20.09 6.03 cyl 6.19 1.79 hp 146.69 68.56 6.1 Specific package for summary tables: 6.1.1 Arsenal package tab1 &lt;- tableby(cyl~gear+hp+wt,data=mtcars) summary(tab1, text=TRUE, digits=2, digits.p=2, digits.pct=1) 4 (N=11) 6 (N=7) 8 (N=14) Total (N=32) p value gear 0.01 - Mean (SD) 4.09 (0.54) 3.86 (0.69) 3.29 (0.73) 3.69 (0.74) - Range 3.00 - 5.00 3.00 - 5.00 3.00 - 5.00 3.00 - 5.00 hp &lt; 0.01 - Mean (SD) 82.64 (20.93) 122.29 (24.26) 209.21 (50.98) 146.69 (68.56) - Range 52.00 - 113.00 105.00 - 175.00 150.00 - 335.00 52.00 - 335.00 wt &lt; 0.01 - Mean (SD) 2.29 (0.57) 3.12 (0.36) 4.00 (0.76) 3.22 (0.98) - Range 1.51 - 3.19 2.62 - 3.46 3.17 - 5.42 1.51 - 5.42 6.1.2 Summary tools package descr(mtcars, stats = c(&quot;mean&quot;, &quot;sd&quot;), transpose = TRUE, headings = FALSE) kable(descr(mtcars, stats = c(&quot;mean&quot;, &quot;sd&quot;, &quot;n.valid&quot;), transpose = TRUE, headings = FALSE),digits = 3) %&gt;% kable_styling(full_width = FALSE)%&gt;% kable_minimal() ## Warning in if (grepl(re1, str, perl = TRUE)) {: the condition has length &gt; 1 and ## only the first element will be used ## Warning in if (grepl(re2, str, perl = TRUE)) {: the condition has length &gt; 1 and ## only the first element will be used ## Warning in if (grepl(re3, str, perl = TRUE)) {: the condition has length &gt; 1 and ## only the first element will be used ## ## Mean Std.Dev ## ---------- -------- --------- ## am 0.41 0.50 ## carb 2.81 1.62 ## cyl 6.19 1.79 ## disp 230.72 123.94 ## drat 3.60 0.53 ## gear 3.69 0.74 ## hp 146.69 68.56 ## mpg 20.09 6.03 ## qsec 17.85 1.79 ## vs 0.44 0.50 ## wt 3.22 0.98 ## Error in pryr::where(obj_name) : length(name) == 1 is not TRUE Mean Std.Dev N.Valid am 0.406 0.499 32 carb 2.812 1.615 32 cyl 6.188 1.786 32 disp 230.722 123.939 32 drat 3.597 0.535 32 gear 3.688 0.738 32 hp 146.688 68.563 32 mpg 20.091 6.027 32 qsec 17.849 1.787 32 vs 0.438 0.504 32 wt 3.217 0.978 32 6.2 Visual summary of data Options are for markdown dfSummary(mtcars, plain.ascii = FALSE, style = &quot;grid&quot;, graph.magnif = 0.5, valid.col = FALSE, tmp.img.dir = &quot;/tmp&quot;) ## temporary images written to &#39;C:\\tmp&#39; 6.2.1 Data Frame Summary 6.2.1.1 mtcars Dimensions: 32 x 11 Duplicates: 0 No Variable Stats / Values Freqs (% of Valid) Graph Missing 1 mpg [numeric] Mean (sd) : 20.1 (6) min &lt; med &lt; max: 10.4 &lt; 19.2 &lt; 33.9 IQR (CV) : 7.4 (0.3) 25 distinct values 0 (0.0%) 2 cyl [numeric] Mean (sd) : 6.2 (1.8) min &lt; med &lt; max: 4 &lt; 6 &lt; 8 IQR (CV) : 4 (0.3) 4 : 11 (34.4%) 6 : 7 (21.9%) 8 : 14 (43.8%) 0 (0.0%) 3 disp [numeric] Mean (sd) : 230.7 (123.9) min &lt; med &lt; max: 71.1 &lt; 196.3 &lt; 472 IQR (CV) : 205.2 (0.5) 27 distinct values 0 (0.0%) 4 hp [numeric] Mean (sd) : 146.7 (68.6) min &lt; med &lt; max: 52 &lt; 123 &lt; 335 IQR (CV) : 83.5 (0.5) 22 distinct values 0 (0.0%) 5 drat [numeric] Mean (sd) : 3.6 (0.5) min &lt; med &lt; max: 2.8 &lt; 3.7 &lt; 4.9 IQR (CV) : 0.8 (0.1) 22 distinct values 0 (0.0%) 6 wt [numeric] Mean (sd) : 3.2 (1) min &lt; med &lt; max: 1.5 &lt; 3.3 &lt; 5.4 IQR (CV) : 1 (0.3) 29 distinct values 0 (0.0%) 7 qsec [numeric] Mean (sd) : 17.8 (1.8) min &lt; med &lt; max: 14.5 &lt; 17.7 &lt; 22.9 IQR (CV) : 2 (0.1) 30 distinct values 0 (0.0%) 8 vs [numeric] Min : 0 Mean : 0.4 Max : 1 0 : 18 (56.2%) 1 : 14 (43.8%) 0 (0.0%) 9 am [numeric] Min : 0 Mean : 0.4 Max : 1 0 : 19 (59.4%) 1 : 13 (40.6%) 0 (0.0%) 10 gear [numeric] Mean (sd) : 3.7 (0.7) min &lt; med &lt; max: 3 &lt; 4 &lt; 5 IQR (CV) : 1 (0.2) 3 : 15 (46.9%) 4 : 12 (37.5%) 5 : 5 (15.6%) 0 (0.0%) 11 carb [numeric] Mean (sd) : 2.8 (1.6) min &lt; med &lt; max: 1 &lt; 2 &lt; 8 IQR (CV) : 2 (0.6) 1 : 7 (21.9%) 2 : 10 (31.2%) 3 : 3 ( 9.4%) 4 : 10 (31.2%) 6 : 1 ( 3.1%) 8 : 1 ( 3.1%) 0 (0.0%) 6.3 Correlation matrix 6.3.1 Ellipse style corrdata &lt;- mtcars %&gt;% select(-c(cyl,disp,vs,am,gear,carb)) corr1 &lt;- Hmisc::rcorr(as.matrix(corrdata)) M &lt;- corr1$r M colnames(M) &lt;- c(&quot;mpg&quot;, &quot;HP&quot;, &quot;Axle Ratio&quot;, &quot;Weight (kPounds)&quot;, &quot;Quarter Mile (s)&quot;) rownames(M) &lt;- c(&quot;mpg&quot;, &quot;HP&quot;, &quot;Axle Ratio&quot;, &quot;Weight (kPounds)&quot;, &quot;Quarter Mile (s)&quot;) p_mat &lt;- corr1$P corr &lt;- corrplot(M, type = &quot;upper&quot;,method=&quot;ellipse&quot;, order = &quot;hclust&quot;, p.mat = p_mat, sig.level = 0.05, insig = &quot;blank&quot;) Figure 6.1: CAPTION THIS FIGURE!! ## mpg hp drat wt qsec ## mpg 1.0000000 -0.7761684 0.68117191 -0.8676594 0.41868403 ## hp -0.7761684 1.0000000 -0.44875912 0.6587479 -0.70822339 ## drat 0.6811719 -0.4487591 1.00000000 -0.7124406 0.09120476 ## wt -0.8676594 0.6587479 -0.71244065 1.0000000 -0.17471588 ## qsec 0.4186840 -0.7082234 0.09120476 -0.1747159 1.00000000 Red is -ve correlation Blue is + ve correlation Blank is no correlation Reference 6.4 Graphing 6.4.1 Frequency Histogram - basic plot1 &lt;- mtcars %&gt;% ggplot(aes(qsec))+geom_histogram() plot1 ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 6.2: CAPTION THIS FIGURE!! 6.4.2 Frequency Histogram + normal distribution plot1 &lt;- mtcars %&gt;% ggplot(aes(qsec)) plot1+geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 6.3: CAPTION THIS FIGURE!! # add normal plot plot1 + geom_histogram(aes( y=..density..))+stat_function(fun = dnorm, args = list(mean =mean(mtcars$qsec), sd=sd(mtcars$qsec))) + theme_bw() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 6.4: CAPTION THIS FIGURE!! # ..density.. changes y axis to density, not count. stat function defines normal line based on data provided. 6.4.3 multiple plot of all distributions mtcars %&gt;% keep(is.numeric) %&gt;% gather() %&gt;% ggplot(aes(value)) + facet_wrap(~ key, scales = &quot;free&quot;) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 6.5: CAPTION THIS FIGURE!! 6.4.4 x*y scatterplot with linear regression or polynomial regression plot2&lt;- mtcars %&gt;% ggplot(aes(x=wt,y=qsec)) plot2a &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula=y~x) + theme_bw() plot2b &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula = y ~ poly(x, 2)) + theme_bw() plot2c &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula = y ~ poly(x, 3)) + theme_bw() plot2d &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula = y ~ poly(x, 4)) + theme_bw() grid.arrange(plot2a,plot2b,plot2c,plot2d,nrow=2,ncol=2) Figure 3.1: CAPTION THIS FIGURE!! 6.4.5 Add formula to plot. my.formula &lt;- y ~ x a &lt;- plot2 +geom_point()+geom_smooth(method=&#39;lm&#39;,formula=my.formula)+stat_poly_eq(formula = my.formula, aes(label = paste(..eq.label.., ..rr.label.., sep = &quot;~~~&quot;)), parse = TRUE) + theme_bw() my.formula2 &lt;- y ~ poly(x, 2) b &lt;- plot2 +geom_point()+geom_smooth(method=&#39;lm&#39;,formula=my.formula2)+stat_poly_eq(formula = my.formula2, aes(label = paste(..eq.label.., ..rr.label.., sep = &quot;~~~&quot;)), parse = TRUE) + theme_bw() grid.arrange(a,b,nrow=1) Figure 6.6: CAPTION THIS FIGURE!! "]]

[["index.html", "Chapter 1 Introduction 1.1 Structure of collection", " Chapter 1 Introduction This document is a collection of useful code for Rmarkdown and R I have used the mtcars dataset if possible I have used the Tidyverse and the pipe ( %&gt;% ) if possible I recommend that the code is checked for warnings that is is not depreciated Dont Panic 1.1 Structure of collection Rmarkdown formatting basics Rstudio load/unload packages print figures to files Libraries/packages essential/useful packaged Data wrangling load dataset clean environment check for duplicates Merging datasheets Merging datasets Reshaping recode factors dealing with missing data Data reduction with PCA Data standardisation Statistical analysis Data Visualisation Tables Plots "],["rmarkdown.html", "Chapter 2 RMarkdown 2.1 Formatting basics", " Chapter 2 RMarkdown This chapter contains syntax for the non-code rmarkdown sections. 2.1 Formatting basics *** on it own, for a horizontal line **text** for bold *text* for italics 1. Item 1 2. Item 2 3. Item 3 + Item 3a + Item 3b for ordered lists [linked phrase](http://example.com) for links ![alt text](figures/img.png) for images ### R chunk basics message=FALSE, warning=FALSE, include=FALSE, ECHO=FALSE (show output), To set document default knitr::opts_chunk$set(echo=FALSE) "],["rstudio.html", "Chapter 3 Rstudio 3.1 Useful packages 3.2 Remove a package 3.3 Import using Janitor 3.4 Remove dataframe 3.5 New vars by concatination 3.6 Save dataframe (CSV or Rdata) 3.7 Save a diagram or plot 3.8 Recode a text variable 3.9 Alter variable names:", " Chapter 3 Rstudio This chapter contains syntax for manipulating data and packages within the R studio environment. 3.1 Useful packages Load all libraries library(tidyverse) # data handling and viz ## Warning: package &#39;tidyverse&#39; was built under R version 4.0.5 ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.3 v purrr 0.3.4 ## v tibble 3.1.2 v dplyr 1.0.6 ## v tidyr 1.1.3 v stringr 1.4.0 ## v readr 1.4.0 v forcats 0.5.1 ## Warning: package &#39;ggplot2&#39; was built under R version 4.0.5 ## Warning: package &#39;tibble&#39; was built under R version 4.0.5 ## Warning: package &#39;tidyr&#39; was built under R version 4.0.5 ## Warning: package &#39;dplyr&#39; was built under R version 4.0.5 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(janitor) #dataframe import cleaning ## Warning: package &#39;janitor&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;janitor&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## chisq.test, fisher.test library(knitr) #nice html tables ## Warning: package &#39;knitr&#39; was built under R version 4.0.5 library(kableExtra) # nicer knitr tables ## Warning: package &#39;kableExtra&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;kableExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## group_rows library(broom) ## Warning: package &#39;broom&#39; was built under R version 4.0.5 library(readr) # load csv stored data library(geosphere) # for calc daylength ## Warning: package &#39;geosphere&#39; was built under R version 4.0.5 3.2 Remove a package #Unload a module: library(clipr) #load ## Welcome to clipr. See ?write_clip for advisories on writing to the clipboard in R. detach(package:clipr) #unload 3.3 Import using Janitor # Create a data.frame with dirty names test_df &lt;- as.data.frame(matrix(ncol = 6)) names(test_df) &lt;- c(&quot;firstName&quot;, &quot;ábc@!*&quot;, &quot;% successful (2009)&quot;, &quot;REPEAT VALUE&quot;, &quot;REPEAT VALUE&quot;, &quot;&quot;) head(test_df) ## firstName ábc@!* % successful (2009) REPEAT VALUE REPEAT VALUE ## 1 NA NA NA NA NA NA test_df &lt;- test_df %&gt;% clean_names() head(test_df) ## first_name abc percent_successful_2009 repeat_value repeat_value_2 x ## 1 NA NA NA NA NA NA Reference 3.4 Remove dataframe data(&quot;mtcars&quot;) data(&quot;band_instruments&quot;) data(&quot;band_instruments2&quot;) # Load example datasets rm(list=ls()[! ls() %in% c(&quot;band_instruments&quot;,&quot;band_instruments2&quot;)]) # Everything except Band instruments rm(list=setdiff(ls(), &quot;band_instruments&quot;)) # Everything except &quot;bandinstruments&quot; rm(list=ls()) # Remove everything Reference:Stackoverflow 3.5 New vars by concatination 3.6 Save dataframe (CSV or Rdata) make date string datenow &lt;- format(Sys.time(), &quot;_%Y_%m_%d&quot;) date ## function () ## .Internal(date()) ## &lt;bytecode: 0x00000000206c2a78&gt; ## &lt;environment: namespace:base&gt; data(mtcars) Write file names #create data directory dir.create(&quot;data_out&quot;) ## Warning in dir.create(&quot;data_out&quot;): &#39;data_out&#39; already exists filenamecsv &lt;- paste(&quot;data_out/mtcsvdata&quot;,datenow,&quot;.csv&quot;,sep=&quot;&quot;) filenamerda &lt;- paste(&quot;data_out/mtrdadata&quot;,datenow,&quot;.rda&quot;,sep=&quot;&quot;) Save the files save(mtcars,file=filenamerda) write.csv(mtcars,file=filenamecsv) 3.7 Save a diagram or plot plot1 &lt;- mtcars %&gt;% ggplot(aes(hp,qsec))+geom_point() #plot1 #print plot if required pdf(&quot;plot.pdf&quot;) plot1 dev.off() ## png ## 2 pdf device off. 3.8 Recode a text variable data(&quot;band_members&quot;) kable(head(band_members)) %&gt;% kable_minimal(full_width = F) name band Mick Stones John Beatles Paul Beatles band_members &lt;- band_members %&gt;% mutate(name=recode(name, &quot;Mick&quot;= &quot;m&quot;)) kable(head((band_members))) %&gt;% kable_minimal(full_width = F) name band m Stones John Beatles Paul Beatles rm(list=ls()) # Remove everything Reference: Kable Extra 3.9 Alter variable names: Remove underscores data(&quot;mtcars&quot;) mtcars &lt;- mtcars %&gt;% rename(hp_new=hp) kable(head((mtcars))) %&gt;% kable_minimal(full_width = F) mpg cyl disp hp_new drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 mtcars &lt;- mtcars %&gt;% rename_with(.fn = ~str_replace(., &quot;_&quot;, &quot;&quot;)) kable(head((mtcars))) %&gt;% kable_minimal(full_width = F) mpg cyl disp hpnew drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 3.9.1 list datasets available #data() # list all available datasets data(&quot;diamonds&quot;) 3.9.2 Render book "],["data-wrangling-and-manipulation.html", "Chapter 4 Data Wrangling and manipulation 4.1 Bin variable ( e.g. Low/Medium/High) 4.2 Conditional function 4.3 Sum across rows 4.4 Standardise variable 4.5 Conditional Replacement 4.6 replace a specfic value 4.7 Filter nas or retain complete cases 4.8 Delete specified columns 4.9 Change specific datapoint 4.10 Work with dates 4.11 Find duplicate rows 4.12 Impute missing values 4.13 Keep rows based on a unique value. 4.14 Delete rows on a variable value 4.15 Use if else to calculate on values 4.16 Merge data frames (variables) 4.17 Merge data frames (individuals) 4.18 Create a new factor from existing 4.19 change data types 4.20 calculate dates and photoperiod 4.21 Reduce variables using PCA", " Chapter 4 Data Wrangling and manipulation library(Hmisc) #impute values ## Warning: package &#39;Hmisc&#39; was built under R version 4.0.5 ## Loading required package: lattice ## Loading required package: survival ## Loading required package: Formula ## ## Attaching package: &#39;Hmisc&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## src, summarize ## The following objects are masked from &#39;package:base&#39;: ## ## format.pval, units library(naniar) # deal with NAs ## Warning: package &#39;naniar&#39; was built under R version 4.0.5 library(geosphere) library(tidyverse) # data handling and viz library(janitor) #dataframe import cleaning library(knitr) #nice html tables library(kableExtra) # nicer knitr tables library(broom) library(readr) # load csv stored data library(geosphere) # for calc daylength library(lubridate) ## ## Attaching package: &#39;lubridate&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union 4.1 Bin variable ( e.g. Low/Medium/High) data(mtcars) mtcars &lt;- mtcars %&gt;% mutate(hp_cat=cut(hp, breaks=c(-Inf, 100, Inf), labels=c(&quot;low hp&quot;,&quot;high hp&quot;))) 4.2 Conditional function mtcars &lt;- mtcars %&gt;% mutate(loghp=ifelse(cyl&gt;4,log10(hp),NA)) # Nonsensical example, but log transformed all horse powers of cars with more # than four cylinders 4.3 Sum across rows mtcars &lt;- mtcars %&gt;% mutate(sum = select(., disp:drat) %&gt;% apply(1, sum, na.rm=TRUE)) #apply() takes Data frame or matrix as an input and gives output in vector #(i.e.many columns to one list) # the &#39;1&#39; sets the dataframe to use (already selected here) Reference 4.4 Standardise variable dat2 &lt;- mtcars %&gt;% as_tibble() %&gt;% mutate(across(where(is.numeric), scale)) funcs &lt;- list(mean = ~mean(.x,na.rm = TRUE), sd = ~sd(.x,na.rm = TRUE) ) dat2 %&gt;% summarise(across(where(is.numeric),funcs)) ## # A tibble: 1 x 26 ## mpg_mean mpg_sd cyl_mean cyl_sd disp_mean disp_sd hp_mean hp_sd drat_mean ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 7.11e-17 1 -1.47e-17 1 -9.08e-17 1 1.04e-17 1 -2.92e-16 ## # ... with 17 more variables: drat_sd &lt;dbl&gt;, wt_mean &lt;dbl&gt;, wt_sd &lt;dbl&gt;, ## # qsec_mean &lt;dbl&gt;, qsec_sd &lt;dbl&gt;, vs_mean &lt;dbl&gt;, vs_sd &lt;dbl&gt;, am_mean &lt;dbl&gt;, ## # am_sd &lt;dbl&gt;, gear_mean &lt;dbl&gt;, gear_sd &lt;dbl&gt;, carb_mean &lt;dbl&gt;, ## # carb_sd &lt;dbl&gt;, loghp_mean &lt;dbl&gt;, loghp_sd &lt;dbl&gt;, sum_mean &lt;dbl&gt;, ## # sum_sd &lt;dbl&gt; 4.5 Conditional Replacement Replace all NAs in a specified variable with 0. mtcars &lt;- mtcars %&gt;% mutate(loghp1 = coalesce(loghp, 0)) #or mtcars &lt;- mtcars %&gt;% mutate(loghp = replace_na(loghp, &quot;missing&quot;)) 4.6 replace a specfic value #ageandheight[row number, column number] = [new value] 4.7 Filter nas or retain complete cases mtcars &lt;- mtcars %&gt;% filter(!is.na(hp)) # no missing values found mtcars &lt;- mtcars %&gt;%filter(complete.cases(.)) # no missing values found 4.8 Delete specified columns mtcars1 &lt;- mtcars %&gt;% select(-(drat)) # single column mtcars2 &lt;- mtcars %&gt;% select(-c(drat,hp,vs:gear)) # multiple columns rm(list=setdiff(ls(), &quot;mtcars&quot;)) # clean environment 4.9 Change specific datapoint mtcarsmissingvalues &lt;- mtcars %&gt;% mutate(gear=ifelse(gear==5,&quot;missing&quot;,gear)) 4.10 Work with dates Add a date column mtcars &lt;- mtcars %&gt;% mutate(date=ymd(&quot;2001-05-24&quot;)) 4.11 Find duplicate rows # specify which variable to check for duplication n_occur1 &lt;- data.frame(table(mtcars$mpg)) kable(n_occur1[n_occur1$Freq &gt; 1,]) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() Var1 Freq 1 10.4 2 6 15.2 2 14 19.2 2 16 21 2 17 21.4 2 19 22.8 2 23 30.4 2 4.12 Impute missing values 4.12.1 To be completedImputing missing values using the mean: #create missing values #mtcarsmissingvalues &lt;- mtcars %&gt;% mutate(gear=ifelse(gear==5,&quot;&quot;,gear)) mtcarsmissingvalues &lt;- mtcars %&gt;% replace_with_na(replace = list(gear = 5)) mtcarsmissingvalues$gear &lt;- impute(mtcarsmissingvalues$gear, mean) # replace with mean mtcarsmissingvalues$gear &lt;- impute(mtcarsmissingvalues$gear, median) # median mtcarsmissingvalues$gear &lt;- impute(mtcarsmissingvalues$gear, 4) # replace specific number Reference: 4.13 Keep rows based on a unique value. e.g. prescription code mtcarsdistinct &lt;- mtcars %&gt;% distinct(cyl, .keep_all= TRUE) Reference 4.14 Delete rows on a variable value mtcars1&lt;-mtcars %&gt;% filter(!(cyl==6)) mtcars2&lt;-mtcars %&gt;% filter(!(cyl==6 | hp==180)) # | is the &#39;or&#39; operator mtcars3&lt;-mtcars %&gt;% filter(!(cyl==8 &amp; hp==215)) # &amp; is the &#39;and&#39; operator # remove the ! To select the individuals with the specified conditions 4.15 Use if else to calculate on values # no NA&#39;s so all values unchanged. mtcars &lt;- mtcars %&gt;% mutate(vs=ifelse(is.na(vs),(carb-am)/365.25,vs)) 4.16 Merge data frames (variables) *left_join(x, y): returns all rows from x, and all columns from x and y. Rows in x with no match in y will have NA values in the new columns. If there are multiple matches between x and y, all combinations of the matches are returned. *inner_join(x, y): returns all rows from x where there are matching values in y, and all columns from x and y. If there are multiple matches between x and y, all combinations of the matches are returned. *full_join(x, y): returns all rows and all columns from both x and y. Where there are not matching values, the function returns NA for the one missing inner: only rows with matching keys in both x and y left: all rows in x, adding matching columns from y right: all rows in y, adding matching columns from x full: all rows in x with matching columns in y, then the rows of y that dont match x. # prepare new dataset # make the rownames into a &#39;joinable&#39; column mtcars &lt;- mtcars %&gt;% mutate(carnames=rownames(mtcars)) mtcars_extradata &lt;- mtcars %&gt;% select(cyl) # make the rownames into a &#39;joinable&#39; column mtcars_extradata &lt;- mtcars_extradata %&gt;% mutate(carnames=rownames(mtcars_extradata)) mtcars_extradata &lt;- mtcars_extradata %&gt;% mutate(valves=cyl*4) mtcars_extradata &lt;- mtcars_extradata %&gt;% select(-cyl) kable(glimpse(mtcars_extradata%&gt;% slice(1:6))) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() ## Rows: 6 ## Columns: 2 ## $ carnames &lt;chr&gt; &quot;Mazda RX4&quot;, &quot;Mazda RX4 Wag&quot;, &quot;Datsun 710&quot;, &quot;Hornet 4 Drive&quot;,~ ## $ valves &lt;dbl&gt; 24, 24, 16, 24, 32, 24 carnames valves Mazda RX4 Mazda RX4 24 Mazda RX4 Wag Mazda RX4 Wag 24 Datsun 710 Datsun 710 16 Hornet 4 Drive Hornet 4 Drive 24 Hornet Sportabout Hornet Sportabout 32 Valiant Valiant 24 mtcars &lt;- left_join(mtcars,mtcars_extradata,by = &#39;carnames&#39;) kable(glimpse(mtcars %&gt;%select(carb:valves) %&gt;% slice(1:6))) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() ## Rows: 6 ## Columns: 8 ## $ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1 ## $ hp_cat &lt;fct&gt; high hp, high hp, low hp, high hp, high hp, high hp ## $ loghp &lt;chr&gt; &quot;2.04139268515822&quot;, &quot;2.04139268515822&quot;, &quot;missing&quot;, &quot;2.0413926~ ## $ sum &lt;dbl&gt; 273.90, 273.90, 204.85, 371.08, 538.15, 332.76 ## $ loghp1 &lt;dbl&gt; 2.041393, 2.041393, 0.000000, 2.041393, 2.243038, 2.021189 ## $ date &lt;date&gt; 2001-05-24, 2001-05-24, 2001-05-24, 2001-05-24, 2001-05-24, 2~ ## $ carnames &lt;chr&gt; &quot;Mazda RX4&quot;, &quot;Mazda RX4 Wag&quot;, &quot;Datsun 710&quot;, &quot;Hornet 4 Drive&quot;,~ ## $ valves &lt;dbl&gt; 24, 24, 16, 24, 32, 24 carb hp_cat loghp sum loghp1 date carnames valves 4 high hp 2.04139268515822 273.90 2.041393 2001-05-24 Mazda RX4 24 4 high hp 2.04139268515822 273.90 2.041393 2001-05-24 Mazda RX4 Wag 24 1 low hp missing 204.85 0.000000 2001-05-24 Datsun 710 16 1 high hp 2.04139268515822 371.08 2.041393 2001-05-24 Hornet 4 Drive 24 2 high hp 2.24303804868629 538.15 2.243038 2001-05-24 Hornet Sportabout 32 1 high hp 2.02118929906994 332.76 2.021189 2001-05-24 Valiant 24 4.17 Merge data frames (individuals) mtcarsmerged &lt;- bind_rows(mtcars2, mtcars3) rm(list=setdiff(ls(), &quot;mtcars&quot;)) # clean environment Reference 4.18 Create a new factor from existing mtcars &lt;- mtcars %&gt;% mutate(cyc_carb = paste(cyl,carb,sep=&quot;-&quot;)) 4.19 change data types (merging fails if data types are different) # adni_demog&lt;-adni_demog %&gt;% mutate(age_scan=as.numeric(age_scan)) # ukbb&lt;-ukbb %&gt;% mutate(scan_no=as.numeric(scan_no)) 4.20 calculate dates and photoperiod (using geosphere library) #import sample dataset dateslat &lt;- read_csv(&quot;dateslat.csv&quot;) ## ## -- Column specification -------------------------------------------------------- ## cols( ## `ID&#39;s` = col_double(), ## `date (dmy)` = col_character(), ## latitude = col_double() ## ) dateslat &lt;- dateslat %&gt;% clean_names() dateslat &lt;- dateslat %&gt;% mutate(dateofscan=(as.Date(date_dmy,format=&quot;%d/%m/%Y&quot;))) dateslat &lt;- dateslat %&gt;% mutate(daylength=daylength(latitude,dateofscan)) dateslat %&gt;% ggplot(aes(x=dateofscan,y=daylength)) +geom_line() +theme_minimal() 4.21 Reduce variables using PCA 4.21.1 To be completed "],["statistical-analysis.html", "Chapter 5 Statistical Analysis 5.1 Regression 5.2 Linear Regression 5.3 Logistic Regression 5.4 Principle Component Analysis 5.5 Survival Analysis and Visualisation 5.6 Receiver Operated Curves (ROC)", " Chapter 5 Statistical Analysis 5.1 Regression 5.1.1 Linear regression on groups 5.2 Linear Regression kable(mtcars %&gt;% group_by(as.factor(gear)) %&gt;% summarise(mean = mean(qsec), sd = sd(qsec))) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() as.factor(gear) mean sd 3 17.692 1.349916 4 18.965 1.613880 5 15.640 1.130487 #Run the same linear regression model by group levels? #Instead of running #summary(lm(y~x)) for the number of levels #you have, you can use the R package broom along with dplyr. # Run the same regression model for gears ## kable(mtcars%&gt;% group_by(gear) %&gt;% do(fitgear = glance(lm(hp~qsec, data = .))) %&gt;% unnest(fitgear),digits=2) %&gt;% kable_styling(full_width = F) %&gt;% kable_minimal() gear r.squared adj.r.squared sigma statistic p.value df logLik AIC BIC deviance df.residual nobs 3 0.66 0.63 28.87 25.19 0.00 1 -70.65 147.31 149.43 10837.12 13 15 4 0.10 0.01 25.72 1.15 0.31 1 -54.90 115.80 117.26 6616.46 10 12 5 0.88 0.83 41.95 21.03 0.02 1 -24.50 55.00 53.83 5279.95 3 5 Reference fit &lt;- lm(qsec ~ wt + hp+disp+factor(cyl), data = mtcars) summary(fit) ## ## Call: ## lm(formula = qsec ~ wt + hp + disp + factor(cyl), data = mtcars) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.9745 -0.5007 -0.1771 0.4984 2.7516 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 17.487436 0.856699 20.413 &lt; 2e-16 *** ## wt 1.620772 0.424366 3.819 0.000748 *** ## hp -0.019618 0.004912 -3.994 0.000475 *** ## disp -0.004124 0.005194 -0.794 0.434313 ## factor(cyl)6 -1.407378 0.588219 -2.393 0.024245 * ## factor(cyl)8 -1.636367 1.131421 -1.446 0.160043 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.9978 on 26 degrees of freedom ## Multiple R-squared: 0.7385, Adjusted R-squared: 0.6882 ## F-statistic: 14.68 on 5 and 26 DF, p-value: 7.13e-07 effectsize(fit) ## # Standardization method: refit ## ## Parameter | Coefficient (std.) | 95% CI ## -------------------------------------------------- ## (Intercept) | 0.57 | [-0.13, 1.28] ## wt | 0.89 | [ 0.41, 1.37] ## hp | -0.75 | [-1.14, -0.37] ## disp | -0.29 | [-1.03, 0.45] ## factor(cyl)6 | -0.79 | [-1.46, -0.11] ## factor(cyl)8 | -0.92 | [-2.22, 0.39] anova_table &lt;- anova(fit) effectsize(anova_table) ## # Effect Size for ANOVA (Type I) ## ## Parameter | Eta2 (partial) | 90% CI ## ------------------------------------------- ## wt | 0.10 | [0.00, 0.31] ## hp | 0.70 | [0.53, 0.80] ## disp | 0.10 | [0.00, 0.30] ## factor(cyl) | 0.18 | [0.00, 0.33] 5.3 Logistic Regression 5.3.1 Create the LogR model 5.4 Principle Component Analysis 5.4.1 Extracting 1st component complete dataset needed for following 5.5 Survival Analysis and Visualisation 5.5.1 To be completed 5.6 Receiver Operated Curves (ROC) 5.6.1 To be completed "],["data-visualisation.html", "Chapter 6 Data Visualisation 6.1 Packages needed 6.2 Summary Tables 6.3 Correlation matrix 6.4 Graphing 6.5 line defined by equation to scatterplot", " Chapter 6 Data Visualisation Tables and graphs, survival plots, missing values. 6.1 Packages needed library(arsenal) # for summary tables library(summarytools) # for summary tables library(gridExtra) # print multiple plots as grid library(ggpmisc) # add formulas and p values to scatterplots library(corrplot) #plotting correlations library(Hmisc) #impute values library(naniar) # deal with NAs library(geosphere) library(tidyverse) # data handling and viz library(janitor) #dataframe import cleaning library(knitr) #nice html tables library(kableExtra) # nicer knitr tables library(broom) library(readr) # load csv stored data library(geosphere) # for calc daylength #library(RColorBrewer) library(viridis) library(reshape2) library(ggrepel) # label points on ggplot source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) 6.2 Summary Tables 6.2.1 Summarise by group data(mtcars) kable(mtcars %&gt;% group_by(cyl) %&gt;% summarise(Ave=mean(hp), StDev=sd(hp))) %&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() cyl Ave StDev 4 82.63636 20.93453 6 122.28571 24.26049 8 209.21429 50.97689 6.2.2 Multiple functions, variables # make sure brackets are correct df.sum &lt;- mtcars %&gt;% select(mpg,cyl,hp) %&gt;% summarise(across(everything(),list(mean=mean,sd=sd))) kable(df.sum,digits=2) %&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() # perform the analysis mpg_mean mpg_sd cyl_mean cyl_sd hp_mean hp_sd 20.09 6.03 6.19 1.79 146.69 68.56 df.longer &lt;- df.sum%&gt;% pivot_longer(col=everything(), names_to = c(&quot;Attribute&quot;,&quot;.value&quot;), names_sep = &quot;_&quot;) kable(df.longer,digits=2) %&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() # pivot longer the analysis to make it readable Attribute mean sd mpg 20.09 6.03 cyl 6.19 1.79 hp 146.69 68.56 6.2.3 Arsenal summary table tab1 &lt;- tableby(cyl~gear+hp+wt,data=mtcars) summary(tab1, text=TRUE, digits=2, digits.p=2, digits.pct=1) 4 (N=11) 6 (N=7) 8 (N=14) Total (N=32) p value gear 0.01 - Mean (SD) 4.09 (0.54) 3.86 (0.69) 3.29 (0.73) 3.69 (0.74) - Range 3.00 - 5.00 3.00 - 5.00 3.00 - 5.00 3.00 - 5.00 hp &lt; 0.01 - Mean (SD) 82.64 (20.93) 122.29 (24.26) 209.21 (50.98) 146.69 (68.56) - Range 52.00 - 113.00 105.00 - 175.00 150.00 - 335.00 52.00 - 335.00 wt &lt; 0.01 - Mean (SD) 2.29 (0.57) 3.12 (0.36) 4.00 (0.76) 3.22 (0.98) - Range 1.51 - 3.19 2.62 - 3.46 3.17 - 5.42 1.51 - 5.42 6.2.4 Summarytools tables descr(mtcars, stats = c(&quot;mean&quot;, &quot;sd&quot;), transpose = TRUE, headings = FALSE) ## ## Mean Std.Dev ## ---------- -------- --------- ## am 0.41 0.50 ## carb 2.81 1.62 ## cyl 6.19 1.79 ## disp 230.72 123.94 ## drat 3.60 0.53 ## gear 3.69 0.74 ## hp 146.69 68.56 ## mpg 20.09 6.03 ## qsec 17.85 1.79 ## vs 0.44 0.50 ## wt 3.22 0.98 kable(descr(mtcars, stats = c(&quot;mean&quot;, &quot;sd&quot;, &quot;n.valid&quot;), transpose = TRUE, headings = FALSE),digits = 3) %&gt;% kable_styling(full_width = FALSE)%&gt;% kable_minimal() ## Warning in if (grepl(re1, str, perl = TRUE)) {: the condition has length &gt; 1 and ## only the first element will be used ## Warning in if (grepl(re2, str, perl = TRUE)) {: the condition has length &gt; 1 and ## only the first element will be used ## Warning in if (grepl(re3, str, perl = TRUE)) {: the condition has length &gt; 1 and ## only the first element will be used ## Error in pryr::where(obj_name) : length(name) == 1 is not TRUE Mean Std.Dev N.Valid am 0.406 0.499 32 carb 2.812 1.615 32 cyl 6.188 1.786 32 disp 230.722 123.939 32 drat 3.597 0.535 32 gear 3.688 0.738 32 hp 146.688 68.563 32 mpg 20.091 6.027 32 qsec 17.849 1.787 32 vs 0.438 0.504 32 wt 3.217 0.978 32 6.2.5 Visual summary of data Options are for markdown dfSummary(mtcars, plain.ascii = FALSE, style = &quot;grid&quot;, graph.magnif = 0.5, valid.col = FALSE, tmp.img.dir = &quot;/tmp&quot;) ## temporary images written to &#39;C:\\tmp&#39; 6.2.6 Data Frame Summary 6.2.6.1 mtcars Dimensions: 32 x 11 Duplicates: 0 No Variable Stats / Values Freqs (% of Valid) Graph Missing 1 mpg [numeric] Mean (sd) : 20.1 (6) min &lt; med &lt; max: 10.4 &lt; 19.2 &lt; 33.9 IQR (CV) : 7.4 (0.3) 25 distinct values 0 (0.0%) 2 cyl [numeric] Mean (sd) : 6.2 (1.8) min &lt; med &lt; max: 4 &lt; 6 &lt; 8 IQR (CV) : 4 (0.3) 4 : 11 (34.4%) 6 : 7 (21.9%) 8 : 14 (43.8%) 0 (0.0%) 3 disp [numeric] Mean (sd) : 230.7 (123.9) min &lt; med &lt; max: 71.1 &lt; 196.3 &lt; 472 IQR (CV) : 205.2 (0.5) 27 distinct values 0 (0.0%) 4 hp [numeric] Mean (sd) : 146.7 (68.6) min &lt; med &lt; max: 52 &lt; 123 &lt; 335 IQR (CV) : 83.5 (0.5) 22 distinct values 0 (0.0%) 5 drat [numeric] Mean (sd) : 3.6 (0.5) min &lt; med &lt; max: 2.8 &lt; 3.7 &lt; 4.9 IQR (CV) : 0.8 (0.1) 22 distinct values 0 (0.0%) 6 wt [numeric] Mean (sd) : 3.2 (1) min &lt; med &lt; max: 1.5 &lt; 3.3 &lt; 5.4 IQR (CV) : 1 (0.3) 29 distinct values 0 (0.0%) 7 qsec [numeric] Mean (sd) : 17.8 (1.8) min &lt; med &lt; max: 14.5 &lt; 17.7 &lt; 22.9 IQR (CV) : 2 (0.1) 30 distinct values 0 (0.0%) 8 vs [numeric] Min : 0 Mean : 0.4 Max : 1 0 : 18 (56.2%) 1 : 14 (43.8%) 0 (0.0%) 9 am [numeric] Min : 0 Mean : 0.4 Max : 1 0 : 19 (59.4%) 1 : 13 (40.6%) 0 (0.0%) 10 gear [numeric] Mean (sd) : 3.7 (0.7) min &lt; med &lt; max: 3 &lt; 4 &lt; 5 IQR (CV) : 1 (0.2) 3 : 15 (46.9%) 4 : 12 (37.5%) 5 : 5 (15.6%) 0 (0.0%) 11 carb [numeric] Mean (sd) : 2.8 (1.6) min &lt; med &lt; max: 1 &lt; 2 &lt; 8 IQR (CV) : 2 (0.6) 1 : 7 (21.9%) 2 : 10 (31.2%) 3 : 3 ( 9.4%) 4 : 10 (31.2%) 6 : 1 ( 3.1%) 8 : 1 ( 3.1%) 0 (0.0%) 6.3 Correlation matrix 6.3.1 Ellipse style corrdata &lt;- mtcars %&gt;% select(-c(cyl,disp,vs,am,gear,carb)) corr1 &lt;- Hmisc::rcorr(as.matrix(corrdata)) M &lt;- corr1$r #M colnames(M) &lt;- c(&quot;mpg&quot;, &quot;HP&quot;, &quot;Axle Ratio&quot;, &quot;Weight (kPounds)&quot;, &quot;Quarter Mile (s)&quot;) rownames(M) &lt;- c(&quot;mpg&quot;, &quot;HP&quot;, &quot;Axle Ratio&quot;, &quot;Weight (kPounds)&quot;, &quot;Quarter Mile (s)&quot;) p_mat &lt;- corr1$P corr &lt;- corrplot(M, type = &quot;upper&quot;,method=&quot;ellipse&quot;, order = &quot;hclust&quot;, p.mat = p_mat, sig.level = 0.05, insig = &quot;blank&quot;) Figure 6.1: Correlation Plot Red is -ve correlation Blue is + ve correlation Blank is no correlation Reference 6.4 Graphing 6.4.1 Basic distribution Histogram plot1 &lt;- mtcars %&gt;% ggplot(aes(qsec))+geom_histogram() plot1 ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ### Distribution + Normal line plot1 &lt;- mtcars %&gt;% ggplot(aes(qsec)) # plot1+geom_histogram() # add normal plot plot1 + geom_histogram(aes( y=..density..),bins = 20)+ stat_function(fun = dnorm, args = list(mean =mean(mtcars$qsec), sd=sd(mtcars$qsec))) + theme_bw() # ..density.. changes y axis to density, not count. stat function defines normal # line based on data provided. 6.4.2 multiple plot of all distributions mtcars %&gt;% keep(is.numeric) %&gt;% gather() %&gt;% ggplot(aes(value)) + facet_wrap(~ key, scales = &quot;free&quot;) + geom_histogram(bins = 15) 6.4.3 x*y scatterplot with linear or polynomial regression plot2&lt;- mtcars %&gt;% ggplot(aes(x=wt,y=qsec)) plot2a &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula=y~x) + theme_bw() plot2b &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula = y ~ poly(x, 2)) + theme_bw() plot2c &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula = y ~ poly(x, 3)) + theme_bw() plot2d &lt;- plot2 +geom_point()+stat_smooth(method=&#39;lm&#39;,formula = y ~ poly(x, 4)) + theme_bw() grid.arrange(plot2a,plot2b,plot2c,plot2d,nrow=2,ncol=2) 6.4.4 Add formula to plot. my.formula &lt;- y ~ x a &lt;- plot2 +geom_point()+geom_smooth(method=&#39;lm&#39;,formula=my.formula)+ stat_poly_eq(formula = my.formula, aes(label = paste(..eq.label.., ..rr.label.., sep = &quot;~~~&quot;)), parse = TRUE) + theme_bw() my.formula2 &lt;- y ~ poly(x, 2) b &lt;- plot2 +geom_point()+geom_smooth(method=&#39;lm&#39;,formula=my.formula2)+ stat_poly_eq(formula = my.formula2, aes(label = paste(..eq.label.., ..rr.label.., sep = &quot;~~~&quot;)), parse = TRUE) + theme_bw() grid.arrange(a,b,nrow=1) 6.4.5 Raincloud plots (ggplot) library(plyr) ## Warning: package &#39;plyr&#39; was built under R version 4.0.5 ## ------------------------------------------------------------------------------ ## You have loaded plyr after dplyr - this is likely to cause problems. ## If you need functions from both plyr and dplyr, please load plyr first, then dplyr: ## library(plyr); library(dplyr) ## ------------------------------------------------------------------------------ ## ## Attaching package: &#39;plyr&#39; ## The following objects are masked from &#39;package:Hmisc&#39;: ## ## is.discrete, summarize ## The following objects are masked from &#39;package:dplyr&#39;: ## ## arrange, count, desc, failwith, id, mutate, rename, summarise, ## summarize ## The following object is masked from &#39;package:purrr&#39;: ## ## compact library(dplyr) 6.4.5.1 custom theme creation theme_rain = theme( text = element_text(size = 10), axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), axis.text = element_text(size = 14), axis.text.x = element_text(angle = 0, vjust = 0.5), legend.title=element_text(size=16), legend.text=element_text(size=16), legend.position = &quot;right&quot;, plot.title = element_text(lineheight=.8, face=&quot;bold&quot;, size = 16), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.line.x = element_line(colour = &#39;black&#39;, size=0.5, linetype=&#39;solid&#39;), axis.line.y = element_line(colour = &#39;black&#39;, size=0.5, linetype=&#39;solid&#39;)) 6.4.5.2 make summary functions lb &lt;- function(x) mean(x) - sd(x) ub &lt;- function(x) mean(x) + sd(x) 6.4.5.3 row names as real column mtcars &lt;- tibble::rownames_to_column(mtcars, &quot;car_name&quot;) mtcars &lt;- mtcars %&gt;% mutate(cyl=as_factor(cyl)) 6.4.5.4 calc summary data data(&quot;diamonds&quot;) sumld&lt;- ddply(diamonds, ~cut, summarise, mean = mean(carat), median = median(carat), lower = lb(carat), upper = ub(carat)) kable(head(sumld)) %&gt;% kable_minimal() cut mean median lower upper Fair 1.0461366 1.00 0.5297323 1.562541 Good 0.8491847 0.82 0.3951303 1.303239 Very Good 0.8063814 0.71 0.3469460 1.265817 Premium 0.8919549 0.86 0.3766933 1.407217 Ideal 0.7028370 0.54 0.2699607 1.135713 6.4.6 raincloud plot (diamonds) g &lt;- ggplot(data = diamonds, aes(y = carat, x = cut, fill = cut)) + geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .3) + geom_point(aes(y = carat, color = cut), position = position_jitter(width = .15), size = .5, alpha = 0.3) + geom_boxplot(width = .2, guides = FALSE, outlier.shape = NA, alpha = 0.9) + expand_limits(x = 5.25) + scale_color_viridis_d() + scale_fill_viridis_d() + coord_flip() + theme_bw() + theme_rain ## Warning: Ignoring unknown parameters: guides g ### Alternative raincloud #calculations needed sumld&lt;- ddply(diamonds, ~cut, summarise, mean = mean(carat), median = median(carat), lower = lb(carat), upper = ub(carat)) g &lt;- ggplot(data = diamonds, aes(y = carat, x = cut, fill = cut)) + geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) + geom_point(aes(y = carat, color = cut), position = position_jitter(width = .15), size = .5, alpha = 0.8) + geom_point(data = sumld, aes(x = cut, y = mean), position = position_nudge(x = 0.3), size = 2.5) + geom_errorbar(data = sumld, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.3), width = 0) + expand_limits(x = 5.25) + guides(fill = FALSE) + guides(color = FALSE) + scale_color_viridis_d() + scale_fill_viridis_d() + theme_bw() + theme_rain g Figure 6.2: Raincoud plot of means 6.4.7 Scatterplot theme theme_scatter = theme( text = element_text(size = 10), axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12, angle = 0,vjust = .5), axis.text = element_text(size = 10), axis.text.x = element_text(angle = 0, vjust = 0.5), legend.title=element_text(size=12,hjust = .5), legend.text=element_text(size=10), #legend.position = &quot;right&quot;, legend.background = element_rect(colour=&#39;light grey&#39;), plot.title = element_text(lineheight=.8, face=&quot;bold&quot;, size = 16), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.line.x = element_line(colour = &#39;black&#39;, size=0.5, linetype=&#39;solid&#39;), axis.line.y = element_line(colour = &#39;black&#39;, size=0.5, linetype=&#39;solid&#39;)) 6.4.8 Scatterplots sp &lt;- diamonds %&gt;% ggplot(aes(x=carat,y=price)) sp1 &lt;- sp+geom_point() sp2 &lt;- sp+geom_point() +theme_bw() sp3 &lt;- sp+geom_point() +theme_bw() +theme_scatter sp4 &lt;- sp+geom_point(alpha=.01)+ylab(&#39;(£)&#39;) +theme_bw() +theme_scatter grid.arrange(sp1,sp2,sp3,sp4,nrow=2,ncol=2) Figure 6.3: Scatterplots 6.4.9 make axis logarithmic sp5 &lt;- sp+geom_point(alpha=.01)+ylab(&#39;(£)&#39;) +theme_bw() +theme_scatter sp5+ scale_x_continuous(trans=&#39;log10&#39;) + scale_y_continuous(trans=&#39;log10&#39;) 6.4.10 add a trendline my.formula &lt;- y ~ x # calc formula for display sp5+ylim(0,20000)+xlim(0,3)+geom_smooth(method=&#39;lm&#39;,formula =my.formula, colour=&#39;black&#39;, size=.4,alpha=.6)+ stat_poly_eq(formula = my.formula, aes(label = paste(..eq.label.., ..rr.label.., sep = &quot;~~~&quot;)), parse = TRUE) ## Warning: Removed 32 rows containing non-finite values (stat_smooth). ## Warning: Removed 32 rows containing non-finite values (stat_poly_eq). ## Warning: Removed 32 rows containing missing values (geom_point). ## Warning: Removed 8 rows containing missing values (geom_smooth). Figure 6.4: linear Trendline 6.4.11 add a trendline formula &lt;- y ~ poly(x, 2,raw=TRUE) # calc formula for display sp5+ylim(0,20000)+xlim(0,3)+geom_smooth(method=&#39;lm&#39;,formula =formula, colour=&#39;black&#39;, size=.4,alpha=.6)+ stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = &quot;~~~&quot;)), parse = TRUE) ## Warning: Removed 32 rows containing non-finite values (stat_smooth). ## Warning: Removed 32 rows containing non-finite values (stat_poly_eq). ## Warning: Removed 32 rows containing missing values (geom_point). ## Warning: Removed 14 rows containing missing values (geom_smooth). Figure 6.5: Polynomial trendline 6.4.12 add multiple trendlines sp &lt;- diamonds %&gt;% ggplot(aes(x=carat,y=price,colour=clarity)) sp5 &lt;- sp+geom_point(alpha=.01)+ylab(&#39;(£)&#39;) +theme_bw() +theme_scatter sp6 &lt;- sp5+ylim(0,20000)+xlim(0,3)+ guides(colour = guide_legend(override.aes = list(alpha = 1))) my.formula4 &lt;- y ~ poly(x, 2,raw = TRUE) # calc formula for display sp7 &lt;- sp6+geom_smooth(aes(colour=clarity),method=&#39;lm&#39;,formula = my.formula4,se=F, size=.4,alpha=.6) sp7 sp8 &lt;- sp7+ stat_poly_eq(aes(label = paste(stat(eq.label), stat(adj.rr.label), sep = &quot;*\\&quot;, \\&quot;*&quot;)), formula = my.formula4, parse = TRUE,size=3, geom = &quot;label_npc&quot;) sp8 ### add deviation from regression data(mtcars) mtcars &lt;- tibble::rownames_to_column(mtcars, &quot;car_name&quot;) formula &lt;- y ~ poly(x, 2,raw=TRUE) # calc formula for display hpvmpg &lt;- mtcars %&gt;% ggplot(aes(x=hp,y=mpg,label=rownames(mtcars))) # p1 &lt;- hpvmpg+geom_point()+geom_smooth(method=&#39;lm&#39;,formula =formula,colour=&#39;black&#39;, size=.4,alpha=.6,se=F)+ # stat_fit_deviations(formula = formula, colour = &quot;red&quot;)+geom_label_repel(aes(label =rownames(mtcars)), # box.padding = 0.1, # point.padding = 0.3, # segment.color = &#39;grey50&#39;) p2 &lt;- hpvmpg+geom_point()+geom_smooth(method=&#39;lm&#39;,formula =formula,colour=&#39;black&#39;, size=.4,alpha=.6,se=F)+ stat_fit_deviations(formula = formula, colour = &quot;red&quot;)+geom_label_repel(aes(label =rownames(mtcars)), arrow = arrow(length = unit(0.02, &quot;npc&quot;)), box.padding = .5,min.segment.length = 0,max.overlaps = Inf) p2 Figure 6.6: Deviation from predection #grid.arrange(p1,p2) 6.4.13 residuals (ID those &gt;1SD from $bar{X}) lm &lt;- lm(hp ~ poly(disp, 2,raw=TRUE),data=mtcars) # make lin model resids &lt;- resid(lm) # extract resids as vector mtcars &lt;- mtcars %&gt;% mutate(lmresids=resids) # add to df low &lt;- mtcars %&gt;% summarise(low=mean(lmresids)-sd(lmresids))#calc low limit # assign as variable high &lt;- mtcars %&gt;% summarise(high=mean(lmresids)+sd(lmresids)) low &lt;- dplyr::pull(low) high &lt;- dplyr::pull(high) mtcars &lt;- mtcars %&gt;% mutate(sds=ifelse(lmresids&gt;low &amp; lmresids&lt;high,0,1)) #create new var kable(head(mtcars[-c(6:12)]))%&gt;% kable_styling(full_width = FALSE) %&gt;% kable_minimal() car_name mpg cyl disp hp lmresids sds Mazda RX4 21.0 6 160 110 -11.763042 0 Mazda RX4 Wag 21.0 6 160 110 -11.763042 0 Datsun 710 22.8 4 108 93 5.792055 0 Hornet 4 Drive 21.4 6 258 110 -63.114644 1 Hornet Sportabout 18.7 8 360 175 -32.450810 0 Valiant 18.1 6 225 105 -52.832288 1 p2 &lt;- hpvmpg+geom_point()+geom_smooth(method=&#39;lm&#39;,formula =formula,colour=&#39;black&#39;, size=.4,alpha=.6,se=F)+ stat_fit_deviations(formula = formula, colour = &quot;red&quot;)+geom_label_repel(aes(label =car_name), arrow = arrow(length = unit(0.02, &quot;npc&quot;)), box.padding = .5,min.segment.length = 0,max.overlaps = Inf) 6.4.14 only label extreme residuals formula &lt;- y ~ poly(x, 2,raw=TRUE) # calc formula for display dat2 &lt;- mtcars dat2$car_name &lt;- &quot;&quot; ix_label &lt;- which(mtcars$sds == 1) dat2$car_name[ix_label] &lt;- mtcars$car_name[ix_label] hpvmpg &lt;- dat2 %&gt;% ggplot(aes(x=disp,y=hp,label=car_name)) hpvmpg+geom_point(color = ifelse(dat2$car_name == &quot;&quot;, &quot;grey50&quot;, &quot;red&quot;),size = ifelse(dat2$car_name == &quot;&quot;, 1, 3))+geom_text_repel(aes(label =car_name), box.padding = .55)+geom_smooth(method=&#39;lm&#39;,formula =formula,colour=&#39;black&#39;, size=.3,alpha=.6,se=F)+ stat_fit_deviations(formula = formula, colour = &quot;red&quot;,size=.5,alpha=.4)+ stat_poly_eq(aes(label = paste(stat(eq.label), stat(adj.rr.label), sep = &quot;*\\&quot;, \\&quot;*&quot;)), formula = formula, parse = TRUE,size=3, geom = &quot;label_npc&quot;)+theme_minimal() 6.5 line defined by equation to scatterplot plot2&lt;- mtcars %&gt;% ggplot(aes(x=hp,y=qsec)) q1 &lt;- plot2+geom_point()+ stat_function(fun = function(x) 20-(.013*x)) # linear function fun = &#39;y = 20 - 0.013x - 0.00003x^2&#39; q2 &lt;- plot2+geom_point()+ stat_function(fun = function(x) 20-(.013*x+.00003*x^2))# poly function # poly function q2 &lt;- q2+ annotate(&quot;text&quot;, x = 175, y = 22, label = fun,size=4) grid.arrange(q1,q2,nrow=1) "],["bbc-style.html", "Chapter 7 BBC style 7.1 load packages", " Chapter 7 BBC style 7.1 load packages library(tidyverse) library(gapminder) ## Warning: package &#39;gapminder&#39; was built under R version 4.0.5 library(ggalt) ## Warning: package &#39;ggalt&#39; was built under R version 4.0.5 ## Registered S3 methods overwritten by &#39;ggalt&#39;: ## method from ## grid.draw.absoluteGrob ggplot2 ## grobHeight.absoluteGrob ggplot2 ## grobWidth.absoluteGrob ggplot2 ## grobX.absoluteGrob ggplot2 ## grobY.absoluteGrob ggplot2 library(R.utils) ## Warning: package &#39;R.utils&#39; was built under R version 4.0.5 ## Loading required package: R.oo ## Loading required package: R.methodsS3 ## R.methodsS3 v1.8.1 (2020-08-26 16:20:06 UTC) successfully loaded. See ?R.methodsS3 for help. ## R.oo v1.24.0 (2020-08-26 16:11:58 UTC) successfully loaded. See ?R.oo for help. ## ## Attaching package: &#39;R.oo&#39; ## The following object is masked from &#39;package:R.methodsS3&#39;: ## ## throw ## The following objects are masked from &#39;package:methods&#39;: ## ## getClasses, getMethods ## The following objects are masked from &#39;package:base&#39;: ## ## attach, detach, load, save ## R.utils v2.10.1 (2020-08-26 22:50:31 UTC) successfully loaded. See ?R.utils for help. ## ## Attaching package: &#39;R.utils&#39; ## The following object is masked from &#39;package:Hmisc&#39;: ## ## capitalize ## The following object is masked from &#39;package:tidyr&#39;: ## ## extract ## The following object is masked from &#39;package:utils&#39;: ## ## timestamp ## The following objects are masked from &#39;package:base&#39;: ## ## cat, commandArgs, getOption, inherits, isOpen, nullfile, parse, ## warnings library(png) library(ggpubr) ## Warning: package &#39;ggpubr&#39; was built under R version 4.0.5 ## ## Attaching package: &#39;ggpubr&#39; ## The following object is masked from &#39;package:plyr&#39;: ## ## mutate library(grid) library(scales) ## ## Attaching package: &#39;scales&#39; ## The following object is masked from &#39;package:viridis&#39;: ## ## viridis_pal ## The following object is masked from &#39;package:arsenal&#39;: ## ## ordinal ## The following object is masked from &#39;package:purrr&#39;: ## ## discard ## The following object is masked from &#39;package:readr&#39;: ## ## col_factor library(bbplot) #Prepare data dumbbell_df &lt;- gapminder %&gt;% filter(year == 1967 | year == 2007) %&gt;% select(country, year, lifeExp) %&gt;% spread(year, lifeExp) %&gt;% mutate(gap = `2007` - `1967`) %&gt;% arrange(desc(gap)) %&gt;% head(10) #Make plot ggplot(dumbbell_df, aes(x = `1967`, xend = `2007`, y = reorder(country, gap), group = country)) + geom_dumbbell(colour = &quot;#dddddd&quot;, size = 3, colour_x = &quot;#FAAB18&quot;, colour_xend = &quot;#1380A1&quot;) + bbc_style() + labs(title=&quot;We&#39;re living longer&quot;, subtitle=&quot;Biggest life expectancy rise, 1967-2007&quot;) ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not ## found in Windows font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not ## found in Windows font database ## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not ## found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database ## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font ## family not found in Windows font database "]]
